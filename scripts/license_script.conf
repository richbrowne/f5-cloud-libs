cli script /Common/license {
    proc script::run {} {
        # maps command line options to whether or not they take a parameter
        array set option_has_parameter {
            host                  1
            user                  1
            password              1
            password-url          1
            password-encrypted    0
            port                  1
            big-iq-host           1
            big-iq-user           1
            big-iq-password       1
            big-iq-password-uri   1
            license-pool-name     1
            big-ip-mgmt-address   1
            big-ip-mgmt-port      1
        }
        set valid_options [array names option_has_parameter]

        set onboard_args "--license-pool"
        set tmsh_arglen [llength $tmsh::argv]
        set index 1
        while {$index < $tmsh_arglen} {
            set option [lindex $tmsh::argv $index]
            if { [lsearch -exact $valid_options $option] == -1 } {
                puts "Invalid option $option. Valid options: $valid_options"
                exit 1
            }

            lappend onboard_args --$option

            if { $option_has_parameter($option) } {
                lappend onboard_args [lindex $tmsh::argv [incr index]]
            }

            incr index
        }

        if { [ catch { exec /bin/bash -c "/usr/bin/f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js $onboard_args" >&@ stdout } result ] } {
            puts "bash command returned error. exiting."
        }
    }
}
